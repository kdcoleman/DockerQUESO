--------------------------------------------------------------------------------------------------------------
QUESO Library: Version = 0.57.1 (5701)

External Release

Build Date   = Jan  9 2019 17:23:08
Build Host   = eccf64474692
Build User   = 
Build Arch   = x86_64-unknown-linux-gnu
Build Rev    = N/A

C++ Config   = mpic++ -g -O2 -Wall

Trilinos DIR = 
GSL Libs     = -L/usr/lib/x86_64-linux-gnu -lgsl -lgslcblas -lm
GRVY DIR     = 
GLPK DIR     = 
HDF5 DIR     = 
--------------------------------------------------------------------------------------------------------------
Beginning run at Wed Jan  9 18:41:54 2019

Beginning run of 'Gravity + Projectile motion' example at Wed Jan  9 18:41:54 2019

Entering StatisticalInverseProblem<P_V,P_M>::constructor(): prefix = , alternativeOptionsValues = 0, m_env.optionsInputFileName() = gravity_inv_fwd.inp
Leaving StatisticalInverseProblem<P_V,P_M>::constructor(): prefix = ip_
In StatisticalInverseProblem<P_V,P_M>::solveWithBayesMetropolisHastings(): computing solution, as requested by user
Entering MetropolisHastingsSG<P_V,P_M>::constructor(1): prefix = ip_, alternativeOptionsValues = 0, m_env.optionsInputFileName() = gravity_inv_fwd.inp, m_initialProposalCovMatrix = 0.169405 
Entering MetropolisHastingsSG<P_V,P_M>::commonConstructor()
Leaving MetropolisHastingsSG<P_V,P_M>::constructor(1)
Starting the generation of Markov chain ip_mh_rawChain, with 20000 positions...

In MetropolisHastingsSG<P_V,P_M>::generateFullChain(): contents of initial position are:8.23176 
In MetropolisHastingsSG<P_V,P_M>::generateFullChain(): targetPdf.domaintSet() info is:In BoxSubset<V,M>::print(): m_minValues = 8 , m_maxValues = 11 , m_volume = 3

Finished generating 2000 positions, current rejection percentage = 51.65 %
Finished generating 4000 positions, current rejection percentage = 53.625 %
Finished generating 6000 positions, current rejection percentage = 53.7667 %
Finished generating 8000 positions, current rejection percentage = 54.025 %
Finished generating 10000 positions, current rejection percentage = 53.66 %
Finished generating 12000 positions, current rejection percentage = 53.525 %
Finished generating 14000 positions, current rejection percentage = 53.6357 %
Finished generating 16000 positions, current rejection percentage = 53.9312 %
Finished generating 18000 positions, current rejection percentage = 53.8611 %
Finished generating 20000 positions, current rejection percentage = 53.765 %
Finished the generation of Markov chain ip_mh_rawChain, with sub 20000 positions
Some information about this chain:
  Chain run time       = 6.1694 seconds

 Breaking of the chain run time:

  Candidate run time   = 0.580818 seconds (9.4145%)
  Num target calls  = 62622
  Target d. run time   = 0.39667 seconds (6.42964%)
  Avg target run time   = 6.33436e-06 seconds
  Mh alpha run time    = 0.247112 seconds (4.00545%)
  Dr alpha run time    = 3.5339 seconds (57.2811%)
----------------------   --------------
  Sum                  = 4.7585 seconds (77.1306%)

 Other run times:
  DR run time          = 5.09077 seconds (82.5165%)
  AM run time          = 0 seconds (0%)
  Number of DRs = 42622(num_DRs/chain_size = 2.1311)
  Out of target support in DR = 0
  Rejection percentage = 53.765 %
  Out of target support percentage = 0 %
In MetropolisHastingsSG<P_V,P_M>::generateSequence(), prefix = ip_mh_, chain name = ip_mh_rawChain: about to try to open generic output file 'outputData/sip_gravity.m', subId = 0, subenv is allowed to write (1/true or 0/false) = 1...
In MetropolisHastingsSG<P_V,P_M>::generateSequence(), prefix = ip_mh_, raw chain name = ip_mh_rawChain: returned from opening generic output file 'outputData/sip_gravity.m', subId = 0
In MetropolisHastingsSG<P_V,P_M>::generateSequence(), prefix = ip_mh_, raw chain name = ip_mh_rawChain: about to try to write raw sub chain output file 'outputData/sip_gravity_raw_chain.m', subId = 0, subenv is allowed to write  1/true or 0/false) = 1...
In MetropolisHastingsSG<P_V,P_M>::generateSequence(): just wrote (per period request) remaining 20000 chain positions , 0 <= pos <= 19999
Entering BaseVectorSequence<V,M>::subPositionsOfMaximum(): subCorrespondingScalarValues,subSequenceSize() = 20000, this->subSequenceSize = 20000
Leaving BaseVectorSequence<V,M>::subPositionsOfMaximum()
In MetropolisHastingsSG<P_V,P_M>::generateSequence(): just computed MLE, rawSubMLEvalue = -5.42625, rawSubMLEpositions.subSequenceSize() = 1, rawSubMLEpositions[0] = 9.76053 
Entering BaseVectorSequence<V,M>::subPositionsOfMaximum(): subCorrespondingScalarValues,subSequenceSize() = 20000, this->subSequenceSize = 20000
Leaving BaseVectorSequence<V,M>::subPositionsOfMaximum()
In MetropolisHastingsSG<P_V,P_M>::generateSequence(): just computed MAP, rawSubMAPvalue = -6.52486, rawSubMAPpositions.subSequenceSize() = 1, rawSubMAPpositions[0] = 9.76053 
In MetropolisHastingsSG<P_V,P_M>::generateSequence(), prefix = ip_mh_, raw chain name = ip_mh_rawChain: returned from writing raw sub chain output file 'outputData/sip_gravity_raw_chain.m', subId = 0
In MetropolisHastingsSG<P_V,P_M>::generateSequence(), prefix = ip_mh_, raw chain name = ip_mh_rawChain: about to try to write raw unified chain output file 'outputData/sip_gravity_raw_chain.m', subId = 0...
In MetropolisHastingsSG<P_V,P_M>::generateSequence(), prefix = ip_mh_, raw chain name = ip_mh_rawChain: returned from writing raw unified chain output file 'outputData/sip_gravity_raw_chain.m', subId = 0
Entering BaseVectorSequence<V,M>::unifiedPositionsOfMaximum(): subCorrespondingScalarValues,subSequenceSize() = 20000, this->subSequenceSize = 20000
Leaving BaseVectorSequence<V,M>::unifiedPositionsOfMaximum()
In MetropolisHastingsSG<P_V,P_M>::generateSequence(): just computed MLE, rawUnifiedMLEvalue = -5.42625, rawUnifiedMLEpositions.subSequenceSize() = 1, rawUnifiedMLEpositions[0] = 9.76053 
Entering BaseVectorSequence<V,M>::unifiedPositionsOfMaximum(): subCorrespondingScalarValues,subSequenceSize() = 20000, this->subSequenceSize = 20000
Leaving BaseVectorSequence<V,M>::unifiedPositionsOfMaximum()
In MetropolisHastingsSG<P_V,P_M>::generateSequence(): just computed MAP, rawUnifiedMAPvalue = -6.52486, rawUnifiedMAPpositions.subSequenceSize() = 1, rawUnifiedMAPpositions[0] = 9.76053 


-----------------------------------------------------
 Writing more information about the Markov chain ip_mh_rawChain to output file ...
-----------------------------------------------------


-----------------------------------------------------
 Finished writing more information about the Markov chain ip_mh_rawChain
-----------------------------------------------------

Entering SequenceOfVectors<V,M>::filter(): initialPos = 0, spacing = 20, subSequenceSize = 20000
Leaving SequenceOfVectors<V,M>::filter(): initialPos = 0, spacing = 20, subSequenceSize = 1000
Entering ScalarSequence<V,M>::filter(): initialPos = 0, spacing = 20, subSequenceSize = 20000
Leaving ScalarSequence<V,M>::filter(): initialPos = 0, spacing = 20, subSequenceSize = 1000
Entering ScalarSequence<V,M>::filter(): initialPos = 0, spacing = 20, subSequenceSize = 20000
Leaving ScalarSequence<V,M>::filter(): initialPos = 0, spacing = 20, subSequenceSize = 1000
In MetropolisHastingsSG<P_V,P_M>::generateSequence(), prefix = ip_mh_: checking necessity of opening output files for filtered chain ip_mh_filtChain...
In MetropolisHastingsSG<P_V,P_M>::generateSequence(), prefix = ip_mh_: closed sub output file 'outputData/sip_gravity_filtered_chain' for filtered chain ip_mh_filtChain
In MetropolisHastingsSG<P_V,P_M>::generateSequence(), prefix = ip_mh_: closed unified output file 'outputData/sip_gravity_filtered_chain' for filtered chain ip_mh_filtChain
In MetropolisHastingsSG<P_V,P_M>::generateSequence(), prefix = ip_mh_: closed generic output file 'outputData/sip_gravity' (chain name is ip_mh_filtChain)

In SequentialVectorRealizer<V,M>::constructor(): m_chain.subSequenceSize() = 1000

Entering StatisticalForwardProblem<P_V,P_M,Q_V,Q_M>::constructor(): prefix = , alternativeOptionsValues = 0, m_env.optionsInputFileName() = gravity_inv_fwd.inp
Leaving StatisticalForwardProblem<P_V,P_M,Q_V,Q_M>::constructor(): prefix = fp_
In StatisticalForwardProblem<P_V,P_M,Q_V,Q_M>::solveWithMonteCarlo(): computing solution, as requested by user
Entering MonteCarloSG<P_V,P_M,Q_V,Q_M>::constructor(): prefix = fp_, alternativeOptionsValues = 0, m_env.optionsInputFileName() = gravity_inv_fwd.inp
Leaving MonteCarloSG<P_V,P_M,Q_V,Q_M>::constructor()
In MonteCarloSG<P_V,P_M,Q_V,Q_M>::internGenerateSequence(): m_optionsObj->m_qseqSize = 100, paramRv.realizer().subPeriod() = 1000, about to call actualGenerateSequence() with subActualSize = 100
Starting the generation of qoi sequence fp_mc_QoiSeq, with 100 samples...
Finished the generation of qoi sequence fp_mc_QoiSeq, with sub 100 samples
Some information about this sequence:
  Sequence run time = 0.000277 seconds

 Breaking of the seq run time:

  QoI function run time   = 0 seconds (0%)
In MonteCarloSG<P_V,P_M,Q_V,Q_M>::internGenerateSequence(): returned from call to actualGenerateSequence() with subActualSize = 100
In MonteCarloSG<P_V,P_M,Q_V,Q_M>::internGenerateSequence(), prefix = fp_mc_: checking necessity of opening generic output file (qseq name is fp_mc_QoiSeq) ...
In MonteCarloSG<P_V,P_M,Q_V,Q_M>::internGenerateSequence(), prefix = fp_mc_: checking necessity of opening output files for pseq fp_mc_ParamSeq...
In MonteCarloSG<P_V,P_M,Q_V,Q_M>::internGenerateSequence(), prefix = fp_mc_: checking necessity of opening output files for qseq fp_mc_QoiSeq...

In SequentialVectorRealizer<V,M>::constructor(): m_chain.subSequenceSize() = 100
In StatisticalForwardProblem<P_V,P_M,Q_V,Q_M>::solveWithMonteCarlo(), prefix = fp_: instantiating cov and corr matrices
In StatisticalForwardProblem<P_V,P_M,Q_V,Q_M>::solveWithMonteCarlo(), prefix = fp_: contents of covariance matrix are
-0.00737219 
In StatisticalForwardProblem<P_V,P_M,Q_V,Q_M>::solveWithMonteCarlo(), prefix = fp_: contents of correlation matrix are
-0.999794 
In StatisticalForwardProblem<P_V,P_M,Q_V,Q_M>::solveWithMonteCarlo(), prefix = fp_: checking necessity of opening data output file 'outputData/sfp_gravity'
In StatisticalForwardProblem<P_V,P_M,Q_V,Q_M>::solveWithMonteCarlo(), prefix = fp_: closed data output file 'outputData/sfp_gravity'

Ending run of 'Gravity + Projectile motion' example at Wed Jan  9 18:42:42 2019

Ending run at Wed Jan  9 18:42:42 2019
Total run time = 48 seconds
